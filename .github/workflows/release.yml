name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      developmentVersion:
        description: 'Next development version (e.g., 1.0.1-SNAPSHOT)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    
    - name: Import GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Create release branch
      run: |
        git checkout -b release/${{ github.event.inputs.releaseVersion }}
        git push origin release/${{ github.event.inputs.releaseVersion }}
    
    - name: Prepare release
      run: |
        mvn release:prepare \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          -Dtag=v${{ github.event.inputs.releaseVersion }} \
          -DpushChanges=false \
          -DlocalCheckout=true \
          -B \
          -s .github/settings.xml
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    
    - name: Perform release
      run: |
        mvn release:perform -B -s .github/settings.xml
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    
    - name: Push changes and tags
      run: |
        git push origin release/${{ github.event.inputs.releaseVersion }}
        git push origin v${{ github.event.inputs.releaseVersion }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.releaseVersion }}
        release_name: Release v${{ github.event.inputs.releaseVersion }}
        body: |
          Release version ${{ github.event.inputs.releaseVersion }}
          
          ## Changes
          - See commit history for detailed changes
        draft: false
        prerelease: false
